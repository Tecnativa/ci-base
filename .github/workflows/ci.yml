name: ci

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      pytest_addopts:
        description:
          Extra options for pytest; use -vv for full details; see
          https://docs.pytest.org/en/latest/example/simple.html#how-to-change-command-line-options-defaults
        required: false

env:
  LANG: "en_US.utf-8"
  LC_ALL: "en_US.utf-8"
  PIP_CACHE_DIR: ${{ github.workspace }}/.cache.~/pip
  PIPX_HOME: ${{ github.workspace }}/.cache.~/pipx
  POETRY_CACHE_DIR: ${{ github.workspace }}/.cache.~/pypoetry
  POETRY_VIRTUALENVS_IN_PROJECT: "true"
  PYTEST_ADDOPTS: ${{ github.event.inputs.pytest_addopts }}
  PYTHONIOENCODING: "UTF-8"
  IMAGE_NAME: ghcr.io/tecnativa/ci-base

jobs:
  test:
    strategy:
      matrix:
        python: [3.9]
    runs-on: ubuntu-latest
    steps:
      # Prepare
      - uses: actions/checkout@v2
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/cache@v2
        with:
          path: |
            .cache.~
            .venv
            ~/.local/bin
          key:
            venv|${{ secrets.CACHE_DATE }}|${{ runner.os }}|${{ matrix.python }}|${{
            hashFiles('pyproject.toml', 'poetry.lock') }}
      - run: pip install poetry
      - name: Patch $PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      - run: poetry install
      # Test
      - run: poetry run pytest

  deploy:
    if: ${{ github.event_name != 'pull_request' }}
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            /tmp/.buildx-cache
          key:
            buildx|${{ secrets.CACHE_DATE }}|${{ runner.os }}|${{
            hashFiles('Dockerfile') }}
      - uses: docker/setup-qemu-action@v1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.BOT_LOGIN }}
          password: ${{ secrets.BOT_TOKEN }}
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.IMAGE_NAME }}
          tag-edge: true
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
      - name: Push
        uses: docker/build-push-action@v2
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          context: .
          file: ./Dockerfile
          labels: ${{ steps.docker_meta.outputs.labels }}
          platforms: ${{ steps.buildx.outputs.platforms }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
